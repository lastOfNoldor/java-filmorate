CREATE TABLE IF NOT EXISTS USERS (
    ID       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL    VARCHAR(255) NOT NULL CONSTRAINT UK_EMAIL UNIQUE,
    LOGIN    VARCHAR(255) NOT NULL CONSTRAINT UK_LOGIN UNIQUE,
    NAME     VARCHAR(255) NOT NULL,
    BIRTHDAY DATE
);

CREATE TABLE IF NOT EXISTS GENRES (
    ID      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME    VARCHAR(255) NOT NULL CONSTRAINT UK_GENRE_NAME UNIQUE
);

CREATE TABLE IF NOT EXISTS MPA_RATES (
    ID      INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME    VARCHAR(8) NOT NULL CONSTRAINT UK_MPA_NAME UNIQUE
);

CREATE TABLE IF NOT EXISTS FILMS (
    ID           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME         VARCHAR(255) NOT NULL,
    DESCRIPTION  TEXT NOT NULL,
    RELEASE_DATE DATE,
    DURATION     INT,
    MPA_ID       INT,
    CONSTRAINT FK_FILM_MPA FOREIGN KEY (MPA_ID) REFERENCES MPA_RATES(ID) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS FILM_GENRES (
    FILM_ID     BIGINT,
    GENRE_ID    BIGINT,
    CONSTRAINT FK_FILM_GENRE_FILM FOREIGN KEY (FILM_ID) REFERENCES FILMS(ID) ON DELETE CASCADE,
    CONSTRAINT FK_FILM_GENRE_GENRE FOREIGN KEY (GENRE_ID) REFERENCES GENRES(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FILM_LIKES (
    FILM_ID     BIGINT,
    USER_ID     BIGINT,
    CONSTRAINT FK_FILM_LIKE_FILM FOREIGN KEY (FILM_ID) REFERENCES FILMS(ID) ON DELETE CASCADE,
    CONSTRAINT FK_FILM_LIKE_USER FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FRIENDSHIPS (
    USER_ID     BIGINT,
    FRIEND_ID     BIGINT,
    PRIMARY KEY (USER_ID, FRIEND_ID),
    CONSTRAINT FK_FRIENDSHIP_REQUESTER FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
    CONSTRAINT FK_FRIENDSHIP_ADDRESSEE FOREIGN KEY (FRIEND_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
    CONSTRAINT CHK_NO_SELF_FRIENDSHIP CHECK (USER_ID != FRIEND_ID)
);









